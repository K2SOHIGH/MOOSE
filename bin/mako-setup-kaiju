#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import os
import argparse
import shutil
import multiprocessing
import yaml
from utils import utils
from utils import log

logger = log.setlogger(os.path.basename(__file__))
logger.info(os.path.basename(__file__))

    
def get_args():
    parser = argparse.ArgumentParser(
        prog= os.path.basename(__file__) ,
        description='Setup kaiju databases.')

    parser.add_argument('-d','--dir', 
        required=True,  
        type=str, 
        help = "Directory where kaiju databases will be stored.")

    parser.add_argument('--db',
        default="nr",  
        choices=["refseq","progenomes","nr","nr_euk","mar_ref","mar","fungi","viruses","plasmids","rvdb"], 
        help = "Kaiju database.")

    parser.add_argument('-f','--force',
        default=None,
        action="store_true",
        help = "force database download even if database already exist.")  

    parser.add_argument('-k', '--kaiju-makedb',
        default=None,
        action="store_true",
        help = "Use kaiju-makedb util instead of direct url.")  


    parser.add_argument(
        '-t',
        '--threads',
        type = int,
        default = multiprocessing.cpu_count()-1,
        help = "number of threads",
    )

    parser.add_argument('--snakargs', dest='snakargs', type=str, default="",
            help='snakmake arguments')

    args = parser.parse_args()
    return args


def main():
    args = get_args()
    f = os.path.abspath(os.path.join(__file__, ".." , ".." , "resources" , "kaiju.json" )  )
    args.dbfile = f

    utils.module(
        "setup-kaiju",
        args
    )

if __name__ == "__main__":
    main()



    