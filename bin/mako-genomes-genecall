#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import argparse
import sys
import os
import yaml
import logging
import multiprocessing


from utils import utils
from utils import log

logger = log.setlogger(os.path.basename(__file__))
logger.info(os.path.basename(__file__))


def get_args():
    parser = argparse.ArgumentParser(
            prog=os.path.basename(__file__),
            description='Run prodigal on a set of genomes.'
        )

    parser.add_argument(
        '-i',
        '--input',
        dest="genome_input",
        type = str,
        required=True,
        help="yaml file containing path to genomes files in fasta format , a fasta file or a directory containing fasta files"
        )
    
    parser.add_argument(
        '-o',
        '--output-directory',
        dest= "res_dir",
        type = str,
        default="mako-prodigal",
        help="output directory"
    )

    parser.add_argument(
        '--checkm-stats',                
        type = str,
        default=None,
        #help="path to another gtdb-wf results directory"
    )    

    parser.add_argument(
        '-e',
        '--extension',
        dest = "genome_extension",
        type = str,
        default="fna.gz",
        help="genome file extension"
    )
        
    parser.add_argument(
        '-t',
        '--threads',
        type = int,
        default = multiprocessing.cpu_count()-1,
        help = "number of threads",
    )

    parser.add_argument('--snakargs', dest='snakargs', type=str, default="",
            help='snakmake arguments')

    args = parser.parse_args()
    return args

def main():
    args = get_args()
    utils.module(
        "prodigal-snakemake-module",
        args
    )



if __name__ == "__main__":
    sys.exit(main())