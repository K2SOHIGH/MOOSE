#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import argparse
import sys
import os
import yaml
import logging
import multiprocessing


from utils import utils
from utils import log


logger = log.setlogger(os.path.basename(__file__))
logger.info(os.path.basename(__file__))

def find_interpro():
    f = os.path.abspath(os.path.join(__file__, ".." , ".." , "resources" , "interproscan.txt" ) )
    print(f)
    if os.path.exists(f):
        interprodir = open(f).read()
        if os.path.isdir(interprodir):
            return interprodir
    return None

def get_args():
    parser = argparse.ArgumentParser(
            prog=os.path.basename(__file__),
            description='Annotate your sequences with interproscan.'
        )

    parser.add_argument(
        '-i',
        '--input',
        dest="INPUT",
        type = str,
        required=True,
        help="yaml file containing path to translated cds files , a fasta file or a directory containing fasta files"
        )
    
    parser.add_argument(
        '-o',
        '--output-directory',
        dest= "RESDIR",
        type = str,
        default="mako-interpro",
        help="output directory"
    )

    parser.add_argument(        
        '--interproscan-dir',                
        type = str,
        default=find_interpro(),
        help="path to interproscan directory [default : {}]".format(find_interpro())
    )    

    parser.add_argument(
        '-e',
        '--extension',
        dest = "extension",
        type = str,
        default="fasta.gz",
        help="input file extension"
    )

    parser.add_argument(        
        "--type",
        default="proteic",
        choices=['proteic'],#,'nucleic'],
        help= "input sequences type"
    )
        
    parser.add_argument(
        '-t',
        '--threads',
        type = int,
        default = multiprocessing.cpu_count()-1,
        help = "number of threads",
    )

    parser.add_argument('--snakargs', dest='snakargs', type=str, default="",
            help='snakmake arguments')

    args = parser.parse_args()
    return args

def main():    
    args = get_args()

    utils.module(
        "interproscan-snakemake-module",
        args
    )

if __name__ == "__main__":
    sys.exit(main())