#!/usr/bin/env python
# -*- coding: utf-8 -*-
localrules: anvio_setup_keggs, anvio_setup_pfams, anvio_setup_scg, anvio_setup_cogs
configfile: "config/config.yaml"

import os
import pandas as pd
import yaml
import logging

from utils import utils
from utils import log


wlogger = log.setlogger(__name__)
config["reset"] = False
dbfile = config["file"]
RESDIR = os.path.dirname(dbfile)
dbdir = config["dir_anvio"]

onstart:
    if os.path.exists(dbfile) and config["force"]:
        os.remove(dbfile)
        print("here")
        config["reset"] = True
    else:
        wlogger.warning("Databases have already been downloaded. If you want to re-download them use --force")
        exit(-1)

rule anvio_setup_target:
    output:
        dbfile
    input:
        expand(
            os.path.join(RESDIR, "anvio-{db}-setup.done"), db = ["scg","cogs","keggs","pfams"]
        )     
    params:
        dbdir = dbdir,   
    run:
        with open(str(output),'w') as stream:
            if params.dbdir:
                stream.write(params.dbdir)
            else:
                stream.write("")


rule anvio_setup_keggs:
    output:                
        temp(os.path.join(RESDIR, "anvio-keggs-setup.done")),
    threads:
        15
    params:
        KEGGDIR = "--kegg-data-dir {}".format(dbdir) if dbdir else "",
        RESET = "--reset" if config["reset"] else "",
    conda:
        "envs/anvio-7.1.yaml"
    shell:
        """            
            anvi-setup-kegg-kofams {params.RESET} {params.KEGGDIR} && touch {output} || true ;
        """

rule anvio_setup_pfams:
    output:                
        temp(os.path.join(RESDIR, "anvio-pfams-setup.done")),
    threads:
        15
    params:
        PFAMDIR = "--pfam-data-dir {}".format(dbdir) if dbdir else "",
        RESET = "--reset" if config["reset"] else "",
    conda:
        "envs/anvio-7.1.yaml"
    shell:
        """            
            anvi-setup-pfams {params.RESET} {params.PFAMDIR} && touch {output} || true ;
        """

rule anvio_setup_scg:
    output:                
        temp(os.path.join(RESDIR, "anvio-scg-setup.done")),
    threads:
        15
    params:
        SCGDIR  = "--scgs-taxonomy-data-dir {}".format(dbdir) if dbdir else "",
        RESET = "--reset" if config["reset"] else "",
    conda:
        "envs/anvio-7.1.yaml"
    shell:
        """            
            anvi-setup-scg-taxonomy {params.RESET} {params.SCGDIR} -T {threads} && touch {output} || true ;
        """

rule anvio_setup_cogs:
    output:        
        temp(os.path.join(RESDIR, "anvio-cogs-setup.done")),            
    threads:
        15
    params:                        
        COGDIR  = "--cog-data-dir {}".format(dbdir) if dbdir else "",        
        RESET = "--reset" if config["reset"] else "",
    conda:
        "envs/anvio-7.1.yaml"
    shell:
        """            
            anvi-setup-ncbi-cogs    {params.RESET} {params.COGDIR} -T {threads} && touch {output} || true ;                        
        """